{"version":3,"file":"static/js/671.87d2d85a.chunk.js","mappings":"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","sources":["components/App.styled.js","components/utils/sharedFunctions.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.js","components/EditBtn/EditBtn.styled.js","components/Portal/Portal.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","hooks/ToggleModal.js","components/EditBtn/EditBtn.jsx","components/ContactsList/ContactsList.jsx","components/FilterNames/FilterNames.jsx","components/AuthMenu/Logout.styled.js","components/AuthMenu/Logout.jsx","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","pages/UserTopMenu.styled.js","pages/UserContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  gap: 15px;\n  font-family: monospace;\n`;\n","export const checkNameForMath = (name, arr) => {\n  return arr.find(user => user.name === name);\n};\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: 40px;\n  padding: 25px;\n  font-size: 20px;\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  input {\n    margin-bottom: 10px;\n  }\n  button {\n    font-family: monospace;\n    margin-top: 16px;\n    padding: 6px;\n    cursor: pointer;\n    border: 0;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);\n\n    border-radius: 10px;\n    transition: 500ms;\n\n    &:hover {\n      background-color: #a9a9a9;\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n\n      transform: scale(1.1);\n    }\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport {\n  useCreateNewContactMutation,\n  useGetContactsQuery,\n} from 'redux/auth/authSlice';\nimport { toast } from 'react-hot-toast';\nimport { checkNameForMath } from 'components/utils/sharedFunctions';\nimport { FormStyle } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const newId = nanoid();\n  const [addContact] = useCreateNewContactMutation();\n  const { data } = useGetContactsQuery();\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (!checkNameForMath(name, data)) {\n      addContact({ name, number });\n    } else {\n      toast.error(`${name} already exists in your phone book`);\n    }\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <FormStyle onSubmit={onSubmitForm}>\n        <label htmlFor={newId}>\n          <span>Name</span>\n        </label>\n        <input\n          id={newId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor={newId}>\n          <span>Number</span>\n        </label>\n        <input\n          id={newId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button>Add contact</button>\n      </FormStyle>\n    </>\n  );\n};\n\nContactsForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  gap: 77px;\n\n  ul {\n    padding: 0;\n  }\n  h2 {\n    font-size: 32px;\n  }\n  label {\n    margin-right: 10px;\n  }\n  li {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 12px;\n    padding: 8px;\n    padding-left: 16px;\n\n    background-color: white;\n    border-radius: 15px;\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n  span {\n    margin-right: 8px;\n\n    &:first-child {\n      font-size: 16px;\n      font-weight: bold;\n    }\n  }\n\n  button {\n    border: none;\n    background-color: #8cada6;\n    cursor: pointer;\n    transition: all 500ms ease 0s;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: auto;\n  padding: 6px 12px;\n  border-radius: 15px;\n  &:hover {\n    background-color: rgb(255, 0, 51);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EditBtnStyled = styled.button`\n  display: flex;\n  padding: 8px;\n  margin-left: 8px;\n  border-radius: 50%;\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  &:hover {\n    background-color: gray;\n    animation-name: spin;\n    animation-duration: 4000ms;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n  }\n`;\n\nexport const EditForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  input {\n    margin-bottom: 14px;\n  }\n  button {\n    font-family: monospace;\n    margin-top: 16px;\n    padding: 6px;\n    cursor: pointer;\n    border: 0;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);\n\n    border-radius: 10px;\n    transition: 500ms;\n\n    &:hover {\n      background-color: #a9a9a9;\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n\n      transform: scale(1.1);\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport const Portal = ({ children }) => {\n  const modalRoot = document.getElementById('modal-root');\n  const element = document.createElement('div');\n\n  useEffect(() => {\n    modalRoot.appendChild(element);\n    return () => {\n      modalRoot.removeChild(element);\n    };\n  });\n\n  return createPortal(children, element);\n};\n","import styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  font-family: monospace;\n  position: fixed;\n  z-index: 1;\n  padding-top: 100px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst ModalBody = styled.div`\n  background-color: #fefefe;\n  margin: auto;\n  padding: 20px;\n  border: transparent;\n  width: 25%;\n  border-radius: 15px;\n\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nconst CloseButton = styled.span`\n  float: right;\n  font-size: 28px;\n  transform: scale(1);\n  transition: transform 1s;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    color: #000;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledModal = {\n  ModalWrapper,\n  ModalBody,\n  CloseButton,\n};\n","import PropTypes from 'prop-types';\nimport { Portal } from 'components/Portal/Portal';\nimport { StyledModal } from './Modal.styled';\nimport { GrFormClose } from 'react-icons/gr';\n\nexport const Modal = ({ children, toggle, open }) => {\n  return (\n    <Portal>\n      {open && (\n        <StyledModal.ModalWrapper onClick={toggle}>\n          <StyledModal.ModalBody onClick={event => event.stopPropagation()}>\n            <StyledModal.CloseButton onClick={toggle}>\n              <GrFormClose />\n            </StyledModal.CloseButton>\n            {children}\n          </StyledModal.ModalBody>\n        </StyledModal.ModalWrapper>\n      )}\n    </Portal>\n  );\n};\n\nModal.propTypes = {\n  toggle: PropTypes.func,\n  open: PropTypes.bool,\n};\n","import { useState, useCallback } from 'react';\n\nfunction useToggle(initialValue = false) {\n  const [toggle, setToggle] = useState(initialValue);\n\n  return [toggle, useCallback(() => setToggle(status => !status), [])];\n}\n\nexport default useToggle;\n","import { FiSettings } from 'react-icons/fi';\nimport {\n  useGetContactsQuery,\n  useModifyContactMutation,\n} from 'redux/auth/authSlice';\nimport { toast } from 'react-hot-toast';\nimport { EditBtnStyled, EditForm } from './EditBtn.styled';\nimport { checkNameForMath } from 'components/utils/sharedFunctions';\nimport { Modal } from 'components/Modal/Modal';\nimport useToggle from 'hooks/ToggleModal';\n\nexport const EditBtn = ({ id, contactName, contactNumber }) => {\n  const [modifyContact] = useModifyContactMutation();\n  const { data } = useGetContactsQuery();\n  const [open, setOpen] = useToggle();\n\n  const handleCollectData = evt => {\n    evt.preventDefault();\n\n    console.log(data.number);\n\n    const name = evt.target.elements.changeName.value;\n    const number = evt.target.elements.changeNumber.value;\n\n    if (!checkNameForMath(name, data)) {\n      modifyContact({ id, name, number });\n    } else {\n      toast.error(`${name} already exists in your phone book`);\n    }\n\n    setOpen(false);\n    evt.target.reset();\n  };\n\n  return (\n    <EditBtnStyled onClick={() => setOpen()}>\n      <Modal open={open} toggle={setOpen}>\n        <EditForm onSubmit={handleCollectData}>\n          <ul>\n            <li>\n              <h2>Old name: </h2>\n              <p>{contactName}</p>\n            </li>\n            <li>\n              <h2>Former number: </h2>\n              <p>{contactNumber}</p>\n            </li>\n          </ul>\n          <label htmlFor=\"changeName\">\n            <span>Name</span>\n          </label>\n          <input\n            id=\"changeName\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label htmlFor=\"changeNumber\">\n            <span>Number</span>\n          </label>\n          <input\n            value={data.number}\n            id=\"changeNumber\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <button>save changes</button>\n        </EditForm>\n      </Modal>\n      <FiSettings />\n    </EditBtnStyled>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { ImSpinner } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\nimport {\n  useDeleteContactMutation,\n  useGetContactsQuery,\n} from 'redux/auth/authSlice';\nimport { DeleteBtn } from './ContactsList.styled';\nimport { EditBtn } from 'components/EditBtn/EditBtn';\n\nexport const ContactsList = ({ filteredContacts }) => {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const createMarkup = contacts => {\n    return contacts.map(({ name, id, number }) => {\n      return (\n        <li key={id} id={id}>\n          <span>{name}:</span>\n          <span>{number}</span>\n          <DeleteBtn disabled={isFetching} onClick={() => deleteContact(id)}>\n            Delete\n          </DeleteBtn>\n          <EditBtn id={id} contactName={name} contactNumber={number} />\n        </li>\n      );\n    });\n  };\n\n  return (\n    <>\n      {isFetching && (\n        <IconContext.Provider\n          value={{\n            className: 'spinner',\n          }}\n        >\n          <ImSpinner />\n        </IconContext.Provider>\n      )}\n      {!isLoading && contacts && (\n        <ul>\n          {filteredContacts\n            ? createMarkup(filteredContacts)\n            : createMarkup(contacts)}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  filter: PropTypes.string,\n};\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nexport const FilterNames = ({ handleFilterValue }) => {\n  const newId = nanoid();\n\n  return (\n    <>\n      <label htmlFor={newId}>Find contacts by name</label>\n      <input\n        type=\"text\"\n        id={newId}\n        name=\"filter\"\n        title=\"Find contacts by name\"\n        onChange={evt => handleFilterValue(evt)}\n      ></input>\n    </>\n  );\n};\n\nFilterNames.propTypes = {\n  handleFilterValue: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const SvgButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: transparent;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: all 500ms ease 0s;\n  :hover {\n    background-color: rgb(169, 169, 169);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    transform: scale(1.1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useLogoutUserMutation } from 'redux/auth/authSlice';\nimport { setLoginCredentials } from 'redux/loginSlice';\nimport { FiLogOut } from 'react-icons/fi';\nimport { SvgButton } from './Logout.styled';\n\nexport const Logout = () => {\n  const [logout] = useLogoutUserMutation();\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    logout()\n      .unwrap()\n      .then(() => {\n        dispatch(setLoginCredentials(null));\n      })\n      .catch(error => console.log(`logout error,${error}`));\n  };\n  return (\n    <SvgButton onClick={handleLogout}>\n      <FiLogOut />\n    </SvgButton>\n  );\n};\n","import styled from 'styled-components';\n\nexport const UserMenuStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  padding: 8px;\n`;\n\nexport const Tooltip = styled.div`\n  position: relative;\n  display: inline-block;\n  margin: 0 auto;\n  span {\n    visibility: hidden;\n    width: 100%;\n    background-color: gray;\n    color: black;\n    text-align: center;\n    border-radius: 4px;\n    padding: 5px;\n    position: absolute;\n    z-index: 1;\n    /* bottom: 125%; */\n    left: 185%;\n    transform: translateX(-50%);\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n  &:hover span {\n    visibility: visible;\n    opacity: 0.7;\n  }\n`;\n\nexport const UserMenuHeader = styled.div`\n  svg {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport const CustomUnderline = styled.div`\n  margin: 0 auto;\n  width: 60%;\n  height: 2px;\n  background-color: black;\n`;\n","import { useGetCurrentUserQuery } from 'redux/auth/authSlice';\nimport { HiOutlineUserCircle } from 'react-icons/hi';\nimport { Logout } from 'components/AuthMenu/Logout';\nimport {\n  CustomUnderline,\n  Tooltip,\n  UserMenuHeader,\n  UserMenuStyled,\n} from './UserMenu.styled';\n\nexport const UserMenu = () => {\n  const { data, isLoading } = useGetCurrentUserQuery();\n\n  return (\n    !isLoading && (\n      <UserMenuStyled>\n        <UserMenuHeader>\n          <HiOutlineUserCircle />\n          <p>{data.name}</p>\n          <CustomUnderline />\n        </UserMenuHeader>\n        <p>Email: {data.email}</p>\n        <Tooltip>\n          <span>Log out</span>\n          <Logout />\n        </Tooltip>\n      </UserMenuStyled>\n    )\n  );\n};\n","import styled from 'styled-components';\n\nexport const UserTopMenu = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n`;\n","import { useGetContactsQuery } from 'redux/auth/authSlice';\nimport { useState } from 'react';\nimport { Wrapper } from 'components/App.styled';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsWrapper } from 'components/ContactsList/ContactsList.styled';\nimport { FilterNames } from 'components/FilterNames/FilterNames';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\nimport { UserTopMenu } from './UserTopMenu.styled';\n\nconst UserContactsPage = () => {\n  const { data } = useGetContactsQuery();\n  const [filteredContacts, setFilteredContacts] = useState(null);\n\n  const handleFilterValue = ({ target: { value } }) => {\n    if (value === '') {\n      setFilteredContacts(null);\n      return;\n    }\n    const filterContacts = data.filter(({ name }) => {\n      const normalizeName = name.toLowerCase();\n\n      return normalizeName.includes(value.toLowerCase());\n    });\n    setFilteredContacts(filterContacts);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <UserTopMenu>\n          <UserMenu />\n          <ContactsForm />\n        </UserTopMenu>\n        <ContactsWrapper>\n          <div>\n            <h2>Contacts</h2>\n            <FilterNames handleFilterValue={handleFilterValue} />\n          </div>\n          <div>\n            <ContactsList filteredContacts={filteredContacts} />\n          </div>\n        </ContactsWrapper>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default UserContactsPage;\n"],"names":["Wrapper","styled","checkNameForMath","name","arr","find","user","FormStyle","ContactsForm","newId","nanoid","useCreateNewContactMutation","addContact","data","useGetContactsQuery","onSubmit","e","preventDefault","form","target","elements","value","number","toast","reset","htmlFor","id","type","pattern","title","required","ContactsWrapper","DeleteBtn","EditBtnStyled","EditForm","Portal","children","modalRoot","document","getElementById","element","createElement","useEffect","appendChild","removeChild","createPortal","StyledModal","ModalWrapper","ModalBody","CloseButton","Modal","toggle","open","onClick","event","stopPropagation","initialValue","useState","setToggle","useCallback","status","EditBtn","contactName","contactNumber","useModifyContactMutation","modifyContact","useToggle","setOpen","evt","console","log","changeName","changeNumber","ContactsList","filteredContacts","contacts","isLoading","isFetching","useDeleteContactMutation","deleteContact","createMarkup","map","disabled","className","FilterNames","handleFilterValue","onChange","SvgButton","Logout","useLogoutUserMutation","logout","dispatch","useDispatch","unwrap","then","setLoginCredentials","catch","error","UserMenuStyled","Tooltip","UserMenuHeader","CustomUnderline","UserMenu","useGetCurrentUserQuery","email","UserTopMenu","setFilteredContacts","filterContacts","filter","toLowerCase","includes"],"sourceRoot":""}